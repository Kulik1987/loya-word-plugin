name: Build and push Docker image to Selectel Container Registry

on:
  push:
    branches: [main, test]
  workflow_dispatch:

env:
  # Имя вашего реестра в Selectel (например, my-registry)
  SEL_REGISTRY: "lls-edp-registry"
  # Полное имя образа вида cr.selcloud.ru/<registry>/<repo>
  IMAGE_BASE: "cr.selcloud.ru/lls-edp-registry/fabric-trust-service"

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      # 1. Клонирование кода
      - uses: actions/checkout@v4

      # 2. Buildx
      - uses: docker/setup-buildx-action@v3

      # 3. Логинимся в Selectel CR
      - name: Login to Selectel Container Registry
        uses: docker/login-action@v3
        with:
          registry: cr.selcloud.ru          # фиксированный энд‑поинт Selectel :contentReference[oaicite:0]{index=0}
          username: ${{ secrets.SELECTEL_REGISTRY_USER }} # из сгенерированного токена
          password: ${{ secrets.SELECTEL_REGISTRY_TOKEN }} # из сгенерированного токена

      # 4. Вычисляем суффикс тега
      - name: Set tag postfix
        run: |
          if [[ "${GITHUB_REF}" == "refs/heads/test" ]]; then
            echo "TAG_POSTFIX=-test" >> $GITHUB_ENV
          else
            echo "TAG_POSTFIX=" >> $GITHUB_ENV
          fi

      # 5. Сборка и пуш
      - name: Build & Push image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ env.IMAGE_BASE }}:latest${{ env.TAG_POSTFIX }}

  cleanup-old-images:
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - name: Delete old tags in Selectel CR (keep latest & latest-test)
        env:
          TOKEN: ${{ secrets.SELECTEL_API_TOKEN }}         # IAM‑токен Selectel с правом write
          REGISTRY_ID: ${{ secrets.SELECTEL_REGISTRY_ID }} # UUID реестра
          REPO_NAME: "fabric-trust-service"                # repo/id, без префикса registry
        run: |
          set -e
          LIST_URL="https://cr.selcloud.ru/api/v1/registries/${REGISTRY_ID}/repositories/${REPO_NAME}/tags"
          CLEAN_URL="https://cr.selcloud.ru/api/v1/registries/${REGISTRY_ID}/repositories/${REPO_NAME}/cleanup"

          TAGS=$(curl -s -H "X-Auth-Token: $TOKEN" "$LIST_URL" | jq -r '.[]')
          for TAG in $TAGS; do
            if [[ "$TAG" != "latest" && "$TAG" != "latest-test" ]]; then
              curl -s -X POST -H "X-Auth-Token: $TOKEN" -H "Content-Type: application/json" \
                   -d "{\"tags\":[\"$TAG\"]}" "$CLEAN_URL"
              echo "Deleted tag $TAG"
            fi
          done